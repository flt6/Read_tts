from typing import Union, Optional
from log import Log
from model import Chapter


def req(
    url: tuple[str, list[str]],
    caller: str,
    logger: Optional[Log],
    level: Optional[int],
    exit: Optional[bool],
    wait: Optional[bool]
) -> Union[dict, None]: ...


class Trans:
    def __init__(self, type: Optional[int]): ...
    def content_basic(self, chap: Chapter) -> list[str]: ...
    def title(self, chap: Chapter) -> str: ...
    def __call__(self, chap: Chapter) -> list[Chapter]: ...


class ToServer:
    def __init__(self, optDir: str): ...
    def createdir(self) -> None: ...
    def asyncDownload(self, chapters: list[Chapter]) -> set[Chapter]: ...


def merge(chapters: list[Chapter], dir: str,
          is_remove: Optional[bool]) -> None: ...


def time_fmt(time: float) -> str: ...
def delete(path: str) -> None: ...
